
on: [push, pull_request]
name: build


jobs:
  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          components: rustfmt
          profile: minimal
          override: true
      - name: Run rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
  #
  # doc-check:
  #   name: Rustdoc-check
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout sources
  #       uses: actions/checkout@v2
  #     - name: Install rust
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: ${{ env.RUST_VERSION }}
  #         components: rust-docs
  #         profile: minimal
  #         override: true
  #     - name: Run cargo rustdoc
  #       uses: actions-rs/cargo@v1
  #       with:
  #         command: rustdoc
  #         args: -- -D warnings

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          components: clippy
          profile: minimal
          override: true
      - name: Run clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-targets -- -D warnings

  audit:
    name: Security audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  test:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          profile: minimal
          override: true
      - name: Run tests
        run: |
          cargo test --all
          cargo test --all --features multi-threaded-cf
      - name: Free disk space
        run: cargo clean

///‚ùóüá∑üá∫‚ùó
/// FHE —Ä–µ–∞–ª–∏–∑—É–µ—Ç —Å—Ö–µ–º—ã BGV, BFV –∏ CKKS.
/// –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –∫–∞–∂–¥–æ–π —Å—Ö–µ–º—ã. –î–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è
/// –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç—ã —Å–∏—Å—Ç–µ–º—ã –æ—Å—Ç–∞—Ç–æ—á–Ω—ã—Ö —á–∏—Å–µ–ª (Residue Number System - RNS).
/// RNS –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π –Ω–∞–¥ –±–æ–ª—å—à–∏–º–∏ —Ü–µ–ª—ã–º–∏ —á–∏—Å–ª–∞–º–∏ –ø—É—Ç–µ–º –∏—Ö
/// —Ä–∞–∑–ª–æ–∂–µ–Ω–∏—è –Ω–∞ –º–∞–ª–µ–Ω—å–∫–∏–µ —á–∏—Å–ª–∞, —É–º–µ—â–∞—é—â–∏–µ—Å—è –≤ –º–∞—à–∏–Ω–Ω—ã—Ö —Å–ª–æ–≤–∞—Ö, –Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ 64-–±–∏—Ç–Ω—ã—Ö —Ü–µ–ª—ã—Ö —á–∏—Å–ª–∞—Ö.
/// –û–¥–Ω–∞–∫–æ –≤ –±—É–¥—É—â–µ–º –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å –º–Ω–æ–≥–æ–ø—Ä–µ—Ü–∏–∑–∏–æ–Ω–Ω—ã–µ –∏–ª–∏ —Å–º–µ—à–∞–Ω–Ω—ã–µ –º–Ω–æ–≥–æ–ø—Ä–µ—Ü–∏–∑–∏–æ–Ω–Ω—ã–µ-RNS-–≤–∞—Ä–∏–∞–Ω—Ç—ã
/// —Å—Ö–µ–º –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –¥–∏–∑–∞–π–Ω–∞.
///
///‚ùóüá¨üáß‚ùó
/// FHE implements BGV, BFV, and CKKS schemes.
/// Multiple variants of each scheme are supported. For efficiency, only the
/// Residue Number System (RNS) variants are currently supported.
/// RNS is used to efficiently perform operations on large integers by decomposing them into
/// small numbers that fit in machine words, e.g., in 64-bit integers. However,
/// multiprecision or mixed multiprecision-RNS variants of the schemes can be added in
/// the future without changing the current design
pub enum FHEScheme {
    Invalid = 0,
    /// üá∑üá∫ –°—Ö–µ–º–∞ CKKS
    /// ---
    /// FHE —Ä–µ–∞–ª–∏–∑—É–µ—Ç –¥–≤–∞ RNS-–≤–∞—Ä–∏–∞–Ω—Ç–∞ —Å—Ö–µ–º—ã CKKS (–¥–∞–ª–µ–µ –æ–Ω–∏ –¥–µ–ª—è—Ç—Å—è –Ω–∞ —á–µ—Ç—ã—Ä–µ —Ä–µ–∂–∏–º–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    /// –æ—Ç —Ç–æ–≥–æ, –∫–∞–∫ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–µ—Ä–µ–º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ). –ü–µ—Ä–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç RNS –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π
    /// –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è 2p –¥–ª—è –≤—Å–µ—Ö —É—Ä–æ–≤–Ω–µ–π –∏ –∑–∞–¥–∞–µ—Ç RNS-–º–æ–¥—É–ª–∏ qi ‚âà 2p –¥–ª—è –≤—Å–µ—Ö i,
    /// —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –º—É–ª—å—Ç–∏–ø–ª–∏–∫–∞—Ç–∏–≤–Ω—ã–º —É—Ä–æ–≤–Ω—è–º (–≤—Å–µ RNS-–º–æ–¥—É–ª–∏, –∫—Ä–æ–º–µ –ø–µ—Ä–≤–æ–≥–æ –∏, –≤–æ–∑–º–æ–∂–Ω–æ,
    /// –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞). –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –±—ã–ª –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω –≤ [21] –∏ [8].
    /// –í–æ –≤—Ç–æ—Ä–æ–º –≤–∞—Ä–∏–∞–Ω—Ç–µ RNS –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —É—Ä–æ–≤–Ω—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–≤–æ–π –º–∞—Å—à—Ç–∞–±–Ω—ã–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç [43].
    /// –í FHE —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ —Ä–µ–∂–∏–º—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –º–∞—Å—à—Ç–∞–±–∞ (–æ–±–æ–∑–Ω–∞—á–µ–Ω—ã —Ç–∞–∫ –∂–µ, –∫–∞–∫ –∏ –¥–ª—è BGV,
    /// —Ç–∞–∫ –∫–∞–∫ –º–µ–∂–¥—É CKKS –∏ BGV –µ—Å—Ç—å –º–Ω–æ–≥–æ –æ–±—â–µ–≥–æ):
    /// üëâ 1. FIXEDMANUAL: –≤–∞—Ä–∏–∞–Ω—Ç RNS [8, 21], –≤ –∫–æ—Ç–æ—Ä–æ–º –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–æ–¥—É–ª—è –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è
    /// –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –≤—Ä—É—á–Ω—É—é.
    /// üëâ 2. FIXEDAUTO: –≤–∞—Ä–∏–∞–Ω—Ç RNS [8, 21], –≤ –∫–æ—Ç–æ—Ä–æ–º –ø–µ—Ä–µ—Å—á–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è
    /// –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –ø–µ—Ä–µ–¥ –≥–æ–º–æ–º–æ—Ä—Ñ–Ω—ã–º —É–º–Ω–æ–∂–µ–Ω–∏–µ–º (–∑–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º –ø–µ—Ä–≤–æ–≥–æ —É–º–Ω–æ–∂–µ–Ω–∏—è).
    /// üëâ 3. FLEXIBLEAUTO: –≤–∞—Ä–∏–∞–Ω—Ç RNS [43], –≤ –∫–æ—Ç–æ—Ä–æ–º –ø–µ—Ä–µ—Å—á–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è
    /// –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –ø–µ—Ä–µ–¥ –≥–æ–º–æ–º–æ—Ä—Ñ–Ω—ã–º —É–º–Ω–æ–∂–µ–Ω–∏–µ–º (–∑–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º –ø–µ—Ä–≤–æ–≥–æ —É–º–Ω–æ–∂–µ–Ω–∏—è).
    /// üëâ 4. FLEXIBLEAUTOEXT: –≤–∞—Ä–∏–∞–Ω—Ç RNS [43], –≤ –∫–æ—Ç–æ—Ä–æ–º –ø–µ—Ä–µ–º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
    /// –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –ø–µ—Ä–µ–¥ –≥–æ–º–æ–º–æ—Ä—Ñ–Ω—ã–º —É–º–Ω–æ–∂–µ–Ω–∏–µ–º (–≤–∫–ª—é—á–∞—è –ø–µ—Ä–≤–æ–µ —É–º–Ω–æ–∂–µ–Ω–∏–µ).
    /// –ó–∞ –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω—ã–º –æ–±—Å—É–∂–¥–µ–Ω–∏–µ–º –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ –¥–ª—è –≤—Å–µ—Ö —ç—Ç–∏—Ö —Ä–µ–∂–∏–º–æ–≤ –º—ã –æ—Ç—Å—ã–ª–∞–µ–º —á–∏—Ç–∞—Ç–µ–ª—è –∫ [43].
    ///
    /// –ü—Ä–∏ –≤—ã–±–æ—Ä–µ –º–µ—Ç–æ–¥–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –º–∞—Å—à—Ç–∞–±–∞ –º—ã —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤—É–µ–º—Å—è —Å–ª–µ–¥—É—é—â–∏–º–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏:
    /// üëâ –†–µ–∂–∏–º FLEXIBLEAUTOEXT –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –Ω–∞–∏–≤—ã—Å—à—É—é —Ç–æ—á–Ω–æ—Å—Ç—å –¥–ª—è —Ç–µ—Ö –∂–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤. –í—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω–∞—è
    /// —Å–ª–æ–∂–Ω–æ—Å—Ç—å –æ–±—ã—á–Ω–æ –≤ 1,5 —Ä–∞–∑–∞ –≤—ã—à–µ –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å —Å–∞–º—ã–º –±—ã—Å—Ç—Ä—ã–º –ø–æ–¥—Ö–æ–¥–æ–º (FIXEDMANUAL –∏–ª–∏
    /// FIXEDAUTO) –¥–ª—è —Ç–µ—Ö –∂–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤.
    /// üëâ –†–µ–∂–∏–º FLEXIBLEAUTO –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —Ç–æ—á–Ω–æ—Å—Ç—å, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–º–µ—Ä–Ω–æ –Ω–∞ 3-4 –±–∏—Ç–∞ –º–µ–Ω—å—à–µ, —á–µ–º
    /// FLEXIBLEAUTOEXT, –Ω–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–º–Ω–æ–≥–æ –±—ã—Å—Ç—Ä–µ–µ.
    /// üëâ –†–µ–∂–∏–º—ã FIXEDMANUAL –∏ FIXEDAUTO –Ω–µ—Å—É—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –ø–æ—Ç–µ—Ä—é —Ç–æ—á–Ω–æ—Å—Ç–∏ –ø—Ä–∏–º–µ—Ä–Ω–æ –Ω–∞ 3-4 –±–∏—Ç–∞
    /// –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å FLEXIBLEAUTO, –Ω–æ –∏–º–µ—é—Ç –º–µ–Ω—å—à—É—é –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—É—é —Å–ª–æ–∂–Ω–æ—Å—Ç—å. –û—Ç–º–µ—Ç–∏–º, —á—Ç–æ FIXEDMANUAL
    /// –º–æ–∂–µ—Ç –∏–º–µ—Ç—å –ª—É—á—à—É—é –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å, —á–µ–º FIXEDAUTO, –µ—Å–ª–∏ –æ–Ω –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω —ç–∫—Å–ø–µ—Ä—Ç–æ–º –ø–æ FHE
    /// –∏–ª–∏ –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä–æ–º –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
    /// üëâ –†–µ–∂–∏–º—ã AUTO –≥–æ—Ä–∞–∑–¥–æ –ø—Ä–æ—â–µ –≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏, —á–µ–º —Ä–µ–∂–∏–º FIXEDMANUAL, —Ç–∞–∫ –∫–∞–∫ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –º–∞—Å—à—Ç–∞–±–∞
    /// –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å –ø–æ–º–æ—â—å—é FHE.
    /// üëâ –ï—Å–ª–∏ —Ü–µ–ª—å—é —è–≤–ª—è–µ—Ç—Å—è –º–∏–Ω–∏–º–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è —à–∏—Ñ—Ä–æ—Ç–µ–∫—Å—Ç–∞ Q –ø—Ä–∏ —Ç–æ–π –∂–µ —Ç–æ—á–Ω–æ—Å—Ç–∏, —Ç–æ –ª—É—á—à–∏–º –≤–∞—Ä–∏–∞–Ω—Ç–æ–º
    /// –±—É–¥–µ—Ç —Ä–µ–∂–∏–º FLEXIBALEAUTOEXT. –í –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏—è—Ö —É–º–µ–Ω—å—à–µ–Ω–∏–µ Q –º–æ–∂–µ—Ç —Ç–∞–∫–∂–µ –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ —É–º–µ–Ω—å—à–µ–Ω–∏—é
    /// —Ä–∞–∑–º–µ—Ä–∞ –∫–æ–ª—å—Ü–∞ –ø—Ä–∏ —Ç–æ–º –∂–µ —É—Ä–æ–≤–Ω–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏, —á—Ç–æ –¥–∞–µ—Ç –ª—É—á—à—É—é –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–ª—è
    /// FLEXIBLEAUTOEXT –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å–æ –≤—Å–µ–º–∏ –æ—Å—Ç–∞–ª—å–Ω—ã–º–∏ —Ä–µ–∂–∏–º–∞–º–∏. –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    /// –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –º–µ—Ç–æ–¥ FLEXIBLEAUTOEXT, —Ç–∞–∫ –∫–∞–∫ –æ–Ω –ø—Ä–æ—Å—Ç –≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –∏ –¥–æ—Å—Ç–∏–≥–∞–µ—Ç –Ω–∞–∏–≤—ã—Å—à–µ–π —Ç–æ—á–Ω–æ—Å—Ç–∏.
    /// –î—Ä—É–≥–∏–µ —Ä–µ–∂–∏–º—ã –º–æ–≥—É—Ç –±—ã—Ç—å —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω—ã, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–∫—Ä–∞—Ç–∏—Ç—å –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è (–æ–±—ã—á–Ω–æ –Ω–µ
    /// –±–æ–ª–µ–µ —á–µ–º –≤ 1,5 —Ä–∞–∑–∞).
    ///
    /// üá¨üáß CKKS scheme.
    /// ---
    /// OpenFHE implements two RNS variants of the CKKS scheme (they are further
    /// split into four modes based on how rescaling is done). The first RNS variant assumes the same
    /// scaling factor 2p for all levels and sets RNS moduli qi ‚âà 2p for all i corresponding to
    /// multiplicative levels (all RNS moduli except for the first and possibly last ones, depending
    /// on the mode). This method was independently proposed in [21] and [8]. The second RNS variant
    /// uses a different scaling factor for each level [43].
    /// The following rescaling modes are implemented in OpenFHE (labeled the same way as for the
    /// BGV scheme as there are a lot of similarities between CKKS and BGV):
    /// üëâ 1. FIXEDMANUAL: the RNS variant [8, 21] where modulus switching is manually done by the
    /// user.
    /// üëâ 2. FIXEDAUTO: the RNS variant [8, 21] where rescaling is automatically done right before a
    /// homomorphic multiplication (except for the first multiplication).
    /// üëâ 3. FLEXIBLEAUTO: the RNS variant [43] where rescaling is automatically done right before a
    /// homomorphic multiplication (except for the first multiplication).
    /// üëâ 4. FLEXIBLEAUTOEXT: the RNS variant [43] where rescaling is automatically done right
    /// before a homomorphic multiplication (including the first multiplication).
    /// For a more detailed discussion of the algorithms for all these modes, the reader is referred
    /// to [43].
    /// We suggest the following guidelines when choosing the rescaling method:
    /// üëâ The FLEXIBLEAUTOEXT mode provides the highest precision for the same parameters.
    /// The computational complexity is typically up to 1.5x higher, as compared to the fastest
    /// approach (FIXEDMANUAL or FIXEDAUTO) for the same parameters.
    /// üëâ The FLEXIBLEAUTO mode provides a precision that is about 3-4 bits smaller than FLEXIBLEAUTOEXT, but can be slightly faster.
    /// üëâ The FIXEDMANUAL and FIXEDAUTO modes incur additional precision loss of about 3-4
    /// bits as compared FLEXIBLEAUTO, but have smaller computational complexity. Note that
    /// FIXEDMANUAL can yield better performance than FIXEDAUTO if it is tailored by an FHE
    /// expert or a compiler for a given application.
    /// üëâ The AUTO modes are much easier to use than the FIXEDMANUAL mode as rescaling is
    /// done automatically by OpenFHE.
    /// üëâ If the goal is to minimize the ciphertext modulus Q for the same precision, then the FLEXIBALEAUTOEXT mode is the best option. In some scenarios, the decrease in Q may also
    /// result in reduced ring dimension for the same security level, yielding better performance for
    /// FLEXIBLEAUTOEXT as compared to all other modes.
    /// Note that the default method is FLEXIBLEAUTOEXT as it easy to use and achieves highest
    /// precision. Other modes can be considered when there is a need to reduce the runtime (typically by
    /// no more than 1.5x).
    CKKSRNS,

    /// üá∑üá∫ –°—Ö–µ–º–∞ BFV
    /// üá¨üáß BFV scheme.
    /// ---
    /// OpenFHE implements four different RNS variants of the BFV scheme. These
    /// variants differ in the way the homomorphic multiplication is performed. There are also some
    /// differences in evaluating the decryption operation for some of the variants. These four variants are:
    /// üëâ HPS: the homomorphic multiplication and decryption are implemented using the RNS procedures proposed by Halevi, Polyakov, and Shoup [37]. These RNS procedures use a mix of
    /// integer and floating-point operations.
    /// üëâ BEHZ: the homomorphic multiplication and decryption are implemented using the RNS procedures described by Bajard, Eynard, Hasan, and Zucca [6]. These RNS procedures are based
    /// on integer arithmetic.
    /// üëâ HPSPOVERQ: the HPS variant where the homomorphic encryption is optimized using the
    /// technique described in [44].
    /// üëâ HPSPOVERQLEVELED: the HPSOVERQ variant where modulus switching is applied inside
    /// homomorphic encryption to further reduce the computational complexity [44].
    /// Note that all four methods use the modified BFV encryption method proposed in [44], which
    /// has smaller noise than the original BFV encryption method [31].
    /// The HPSPOVERQLEVELED method is the fastest when floating-point arithmetic is available.
    /// The BEHZ method can be used when floating-point arithmetic is not available (it is slightly slower
    /// than HPS, typically by no more than 1.2x). The other two modes, namely, HPS and HPSOVERQ,
    /// are available mostly for academic purposes. For a more detailed comparison of the HPS and
    /// BEHZ variants, the reader is referred to [1, 7]. The default method for BFV in OpenFHE is
    /// HPSPOVERQLEVELED.
    /// OpenFHE also provides two different options for BFV encryption: STANDARD and EXTENDED. For the STANDARD option, the encryption is done using fresh modulus Q. For the EXTENDED setting, a larger modulus is used for encryption by employing auxiliary moduli available
    /// for homomorphic multiplication and then modulus switching to Q is executed. The EXTENDED
    /// option requires a slightly smaller value of Q (around 5 bits less in the case of public key encryption)
    /// but makes encryption more computationally expensive. The STANDARD option is used as the
    /// default.
    BFVRNS,

    /// üá∑üá∫ –°—Ö–µ–º–∞ BGV
    /// üá¨üáß BGV scheme.
    /// ---
    /// OpenFHE implements both the original BGV scheme (with unscaled messages) [14]
    /// and the Gentry-Halevi-Smart (GHS) variant (with scaled messages) [33]. The main advantage
    /// of the GHS variant is that the RNS moduli qi do not need to satisfy the congruence relation
    /// qi ‚â° 1 mod t to perform modulus switching. OpenFHE currently supports only the static noise
    /// estimation method [44] to choose the size of RNS moduli.
    /// Four modes for BGV are currently implemented in OpenFHE (these modes are distinguished
    /// by the way the modulus switching is performed):
    /// üëâ 1. FIXEDMANUAL: original BGV variant [14] with RNS optimizations from [33, 44] where
    /// modulus switching is manually done by the user.
    /// üëâ 2. FIXEDAUTO: original BGV variant [14] with RNS optimizations from [33, 44] where modulus
    /// switching is automatically done right before a homomorphic multiplication (except for the
    /// first multiplication).
    /// üëâ 3. FLEXIBLEAUTO: GHS variant [33] with RNS optimizations from [44] where modulus switching is automatically done right before a homomorphic multiplication (except for the first
    /// multiplication).
    /// üëâ 4. FLEXIBLEAUTOEXT: GHS variant [33] with RNS optimizations from [44] where modulus
    /// switching is automatically done right before a homomorphic multiplication (including the first
    /// multiplication).
    /// For a more detailed discussion of the algorithms for all these modes, the reader is referred to [44].
    /// We suggest the following guidelines when choosing the modulus switching method:
    /// üëâ The FLEXIBLEAUTOEXT mode requires the smallest ciphertext modulus Q, but is somewhat slower for most cases than other options (typically less than 1.5x than the fastest mode).
    /// However, FLEXIBLEAUTOEXT is the fastest when a smaller ring dimension N can be chosen for its smaller Q to satisfy the same level of security.
    /// üëâ The FIXEDMANUAL and FIXEDAUTO methods are often the fastest (when the ring dimension N needed to achieve the desired level of security is the same for all four modes).
    /// Note that FIXEDMANUAL can yield better performance than FIXEDAUTO if it is tailored
    /// by an FHE expert or a compiler for a given application.
    /// üëâ The FLEXIBLEAUTO mode can be selected in relatively rare cases where the ring dimension N is smaller than for FIXEDAUTO (note that FLEXIBLEAUTO is often faster than
    /// FLEXIBLEAUTOEXT for the same ring dimension N).
    /// üëâ The AUTO modes are much easier to use than the FIXEDMANUAL mode as modulus
    /// switching is done automatically by OpenFHE.
    /// üëâ The FLEXIBLEAUTOEXT mode supports larger plaintext moduli than other modes.
    /// Note that the default method is FLEXIBLEAUTOEXT as it easy to use and supports largest
    /// plaintext moduli. Other modes can be considered when there is a need to reduce the runtime
    /// (typically by no more than 1.5x).
    BGVRNS,
}
pub type Scheme = FHEScheme;
